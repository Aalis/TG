"""initial_schema

Revision ID: 7c2de7ac64c1
Revises: 
Create Date: 2025-03-10 21:28:51.833422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7c2de7ac64c1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('channel_posts_group_id_fkey', 'channel_posts', type_='foreignkey')
    op.create_foreign_key(None, 'channel_posts', 'parsed_groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('group_members_group_id_fkey', 'group_members', type_='foreignkey')
    op.create_foreign_key(None, 'group_members', 'parsed_groups', ['group_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('parsed_groups_user_id_fkey', 'parsed_groups', type_='foreignkey')
    op.create_foreign_key(None, 'parsed_groups', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('parsed_groups', 'parsing_progress')
    op.drop_constraint('post_comments_replied_to_id_fkey', 'post_comments', type_='foreignkey')
    op.drop_constraint('post_comments_post_id_fkey', 'post_comments', type_='foreignkey')
    op.create_foreign_key(None, 'post_comments', 'channel_posts', ['post_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'post_comments', 'post_comments', ['replied_to_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('telegram_sessions_user_id_fkey', 'telegram_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'telegram_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('telegram_tokens_user_id_fkey', 'telegram_tokens', type_='foreignkey')
    op.create_foreign_key(None, 'telegram_tokens', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('verification_token', sa.String(), nullable=True))
    op.add_column('users', sa.Column('verification_token_expires', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'can_parse',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'can_parse',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_column('users', 'verification_token_expires')
    op.drop_column('users', 'verification_token')
    op.drop_column('users', 'email_verified')
    op.drop_constraint(None, 'telegram_tokens', type_='foreignkey')
    op.create_foreign_key('telegram_tokens_user_id_fkey', 'telegram_tokens', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'telegram_sessions', type_='foreignkey')
    op.create_foreign_key('telegram_sessions_user_id_fkey', 'telegram_sessions', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'post_comments', type_='foreignkey')
    op.drop_constraint(None, 'post_comments', type_='foreignkey')
    op.create_foreign_key('post_comments_post_id_fkey', 'post_comments', 'channel_posts', ['post_id'], ['id'])
    op.create_foreign_key('post_comments_replied_to_id_fkey', 'post_comments', 'post_comments', ['replied_to_id'], ['id'])
    op.add_column('parsed_groups', sa.Column('parsing_progress', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'parsed_groups', type_='foreignkey')
    op.create_foreign_key('parsed_groups_user_id_fkey', 'parsed_groups', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'group_members', type_='foreignkey')
    op.create_foreign_key('group_members_group_id_fkey', 'group_members', 'parsed_groups', ['group_id'], ['id'])
    op.drop_constraint(None, 'channel_posts', type_='foreignkey')
    op.create_foreign_key('channel_posts_group_id_fkey', 'channel_posts', 'parsed_groups', ['group_id'], ['id'])
    # ### end Alembic commands ###
